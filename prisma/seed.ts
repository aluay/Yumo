import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function main() {
	await prisma.script.deleteMany(); // Optional: clear existing scripts

	const scripts = [
		{
			title: "Fetch Data with Axios",
			description: "A simple example using Axios to fetch data from an API.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["http", "axios", "api"],
			difficulty: "BEGINNER",
			dependencies: ["axios"],
			status: "PUBLISHED",
			likes: 10,
			views: 500,
			authorId: 1,
		},
		{
			title: "File Upload in Flask",
			description: "Script to handle file uploads in a Flask server.",
			content: { type: "doc", content: [] },
			language: "python",
			tags: ["flask", "upload", "backend"],
			difficulty: "INTERMEDIATE",
			dependencies: ["flask"],
			status: "PUBLISHED",
			likes: 25,
			views: 1200,
			authorId: 1,
		},
		{
			title: "Basic CRUD with Prisma",
			description: "Create, read, update, and delete records using Prisma ORM.",
			content: { type: "doc", content: [] },
			language: "typescript",
			tags: ["prisma", "orm", "crud"],
			difficulty: "BEGINNER",
			dependencies: ["@prisma/client"],
			status: "PUBLISHED",
			likes: 42,
			views: 3000,
			authorId: 1,
		},
		{
			title: "Dockerizing a Node.js App",
			description:
				"Dockerfile and tips for containerizing a basic Node.js server.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["docker", "nodejs", "container"],
			difficulty: "ADVANCED",
			dependencies: ["express"],
			status: "PUBLISHED",
			likes: 18,
			views: 880,
			authorId: 1,
		},
		{
			title: "Simple Rust CLI",
			description: "Scaffold a basic CLI tool in Rust using clap.",
			content: { type: "doc", content: [] },
			language: "rust",
			tags: ["cli", "rust", "tooling"],
			difficulty: "INTERMEDIATE",
			dependencies: ["clap"],
			status: "PUBLISHED",
			likes: 8,
			views: 420,
			authorId: 1,
		},
		{
			title: "Fetch Data with Axios",
			description: "A simple example using Axios to fetch data from an API.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["http", "axios", "api"],
			difficulty: "BEGINNER",
			dependencies: ["axios"],
			status: "PUBLISHED",
			likes: 10,
			views: 500,
			authorId: 1,
		},
		{
			title: "File Upload in Flask",
			description: "Script to handle file uploads in a Flask server.",
			content: { type: "doc", content: [] },
			language: "python",
			tags: ["flask", "upload", "backend"],
			difficulty: "INTERMEDIATE",
			dependencies: ["flask"],
			status: "PUBLISHED",
			likes: 25,
			views: 1200,
			authorId: 1,
		},
		{
			title: "Basic CRUD with Prisma",
			description: "Create, read, update, and delete records using Prisma ORM.",
			content: { type: "doc", content: [] },
			language: "typescript",
			tags: ["prisma", "orm", "crud"],
			difficulty: "BEGINNER",
			dependencies: ["@prisma/client"],
			status: "PUBLISHED",
			likes: 42,
			views: 3000,
			authorId: 1,
		},
		{
			title: "Dockerizing a Node.js App",
			description:
				"Dockerfile and tips for containerizing a basic Node.js server.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["docker", "nodejs", "container"],
			difficulty: "ADVANCED",
			dependencies: ["express"],
			status: "PUBLISHED",
			likes: 18,
			views: 880,
			authorId: 1,
		},
		{
			title: "Simple Rust CLI",
			description: "Scaffold a basic CLI tool in Rust using clap.",
			content: { type: "doc", content: [] },
			language: "rust",
			tags: ["cli", "rust", "tooling"],
			difficulty: "INTERMEDIATE",
			dependencies: ["clap"],
			status: "PUBLISHED",
			likes: 8,
			views: 420,
			authorId: 1,
		},
		{
			title: "Fetch Data with Axios",
			description: "A simple example using Axios to fetch data from an API.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["http", "axios", "api"],
			difficulty: "BEGINNER",
			dependencies: ["axios"],
			status: "PUBLISHED",
			likes: 10,
			views: 500,
			authorId: 1,
		},
		{
			title: "File Upload in Flask",
			description: "Script to handle file uploads in a Flask server.",
			content: { type: "doc", content: [] },
			language: "python",
			tags: ["flask", "upload", "backend"],
			difficulty: "INTERMEDIATE",
			dependencies: ["flask"],
			status: "PUBLISHED",
			likes: 25,
			views: 1200,
			authorId: 1,
		},
		{
			title: "Basic CRUD with Prisma",
			description: "Create, read, update, and delete records using Prisma ORM.",
			content: { type: "doc", content: [] },
			language: "typescript",
			tags: ["prisma", "orm", "crud"],
			difficulty: "BEGINNER",
			dependencies: ["@prisma/client"],
			status: "PUBLISHED",
			likes: 42,
			views: 3000,
			authorId: 1,
		},
		{
			title: "Dockerizing a Node.js App",
			description:
				"Dockerfile and tips for containerizing a basic Node.js server.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["docker", "nodejs", "container"],
			difficulty: "ADVANCED",
			dependencies: ["express"],
			status: "PUBLISHED",
			likes: 18,
			views: 880,
			authorId: 1,
		},
		{
			title: "Simple Rust CLI",
			description: "Scaffold a basic CLI tool in Rust using clap.",
			content: { type: "doc", content: [] },
			language: "rust",
			tags: ["cli", "rust", "tooling"],
			difficulty: "INTERMEDIATE",
			dependencies: ["clap"],
			status: "PUBLISHED",
			likes: 8,
			views: 420,
			authorId: 1,
		},
		{
			title: "Fetch Data with Axios",
			description: "A simple example using Axios to fetch data from an API.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["http", "axios", "api"],
			difficulty: "BEGINNER",
			dependencies: ["axios"],
			status: "PUBLISHED",
			likes: 10,
			views: 500,
			authorId: 1,
		},
		{
			title: "File Upload in Flask",
			description: "Script to handle file uploads in a Flask server.",
			content: { type: "doc", content: [] },
			language: "python",
			tags: ["flask", "upload", "backend"],
			difficulty: "INTERMEDIATE",
			dependencies: ["flask"],
			status: "PUBLISHED",
			likes: 25,
			views: 1200,
			authorId: 1,
		},
		{
			title: "Basic CRUD with Prisma",
			description: "Create, read, update, and delete records using Prisma ORM.",
			content: { type: "doc", content: [] },
			language: "typescript",
			tags: ["prisma", "orm", "crud"],
			difficulty: "BEGINNER",
			dependencies: ["@prisma/client"],
			status: "PUBLISHED",
			likes: 42,
			views: 3000,
			authorId: 1,
		},
		{
			title: "Dockerizing a Node.js App",
			description:
				"Dockerfile and tips for containerizing a basic Node.js server.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["docker", "nodejs", "container"],
			difficulty: "ADVANCED",
			dependencies: ["express"],
			status: "PUBLISHED",
			likes: 18,
			views: 880,
			authorId: 1,
		},
		{
			title: "Simple Rust CLI",
			description: "Scaffold a basic CLI tool in Rust using clap.",
			content: { type: "doc", content: [] },
			language: "rust",
			tags: ["cli", "rust", "tooling"],
			difficulty: "INTERMEDIATE",
			dependencies: ["clap"],
			status: "PUBLISHED",
			likes: 8,
			views: 420,
			authorId: 1,
		},
		{
			title: "Fetch Data with Axios",
			description: "A simple example using Axios to fetch data from an API.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["http", "axios", "api"],
			difficulty: "BEGINNER",
			dependencies: ["axios"],
			status: "PUBLISHED",
			likes: 10,
			views: 500,
			authorId: 1,
		},
		{
			title: "File Upload in Flask",
			description: "Script to handle file uploads in a Flask server.",
			content: { type: "doc", content: [] },
			language: "python",
			tags: ["flask", "upload", "backend"],
			difficulty: "INTERMEDIATE",
			dependencies: ["flask"],
			status: "PUBLISHED",
			likes: 25,
			views: 1200,
			authorId: 1,
		},
		{
			title: "Basic CRUD with Prisma",
			description: "Create, read, update, and delete records using Prisma ORM.",
			content: { type: "doc", content: [] },
			language: "typescript",
			tags: ["prisma", "orm", "crud"],
			difficulty: "BEGINNER",
			dependencies: ["@prisma/client"],
			status: "PUBLISHED",
			likes: 42,
			views: 3000,
			authorId: 1,
		},
		{
			title: "Dockerizing a Node.js App",
			description:
				"Dockerfile and tips for containerizing a basic Node.js server.",
			content: { type: "doc", content: [] },
			language: "javascript",
			tags: ["docker", "nodejs", "container"],
			difficulty: "ADVANCED",
			dependencies: ["express"],
			status: "PUBLISHED",
			likes: 18,
			views: 880,
			authorId: 1,
		},
		{
			title: "Simple Rust CLI",
			description: "Scaffold a basic CLI tool in Rust using clap.",
			content: { type: "doc", content: [] },
			language: "rust",
			tags: ["cli", "rust", "tooling"],
			difficulty: "INTERMEDIATE",
			dependencies: ["clap"],
			status: "PUBLISHED",
			likes: 8,
			views: 420,
			authorId: 1,
		},
	];

	await prisma.script.createMany({
		data: scripts,
	});

	console.log("✅ Seeded scripts!");
}

main()
	.catch((e) => {
		console.error("❌ Seed failed:", e);
		process.exit(1);
	})
	.finally(async () => {
		await prisma.$disconnect();
	});
